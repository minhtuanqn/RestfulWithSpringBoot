openapi: 3.0.1
info:
  title: Swagger UI Demo
  description: Swagger UI demo by gpcoder.com
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: contact@gpcoder.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  version: 1.0.0
servers:
  - url: http://localhost:8080
tags:
  - name: Department
    description: Everything abount department
  - name: Staff
    description: Everything about staff


paths:
  '/staffs/':
    post:
      tags:
        - Staff
      summary: Create new Staff
      security:
        - BasicAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                username:
                  type: string
                password:
                  type: string
                depId:
                  type: integer
              example:
                firstName: "firstName"
                lastName: "lastName"
                username: "username"
                password: "password"
                depId: 1
          application/xml:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                username:
                  type: string
                password:
                  type: string
                depId:
                  type: integer
              example:
                firstName: "firstName"
                lastName: "lastName"
                username: "username"
                password: "password"
                depId: 1
      responses:
        '200':
          description: Create new staff success
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  firstName:
                    type: string
                    example: "firstName"
                  lastName:
                    type: string
                    example: "lastName"
                  username:
                    type: string
                    example: "username"
                  createAt:
                    type: object
                    example: "2021-06-10T15:37:24.122193"
                  updatedAt:
                    type: object
                    example: null
                  deleteAt:
                    type: object
                    example: null
                  department:
                    type: object
                    example:
                      id: 1
                      name: "ITC"
            application/xml:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  firstName:
                    type: string
                    example: "firstName"
                  lastName:
                    type: string
                    example: "lastName"
                  username:
                    type: string
                    example: "username"
                  createAt:
                    type: object
                    example: "2021-06-10T15:37:24.122193"
                  updatedAt:
                    type: object
                    example: null
                  deleteAt:
                    type: object
                    example: null
                  department:
                    type: object
                    example:
                      id: 1
                      name: "ITC"
        '400':
          description: Invalid input
        '403':
          description: Forbidden Error
    get:
      tags:
        - Staff
      summary: Find existed staffs like searched name
      security:
        - BasicAuth: []
      parameters:
        - name: page
          in: query
          description: Number of paging
          required: false
          schema:
            minimum: 0
            type: integer
        - name: perPage
          in: query
          description: Number of object per page
          required: false
          schema:
            minimum: 1
            type: integer
        - name: sortBy
          in: query
          description: Type for sorting
          required: false
          schema:
            type: string
        - name: sortType
          in: query
          description: descending or ascending
          required: false
          schema:
            type: string
        - name: searchedValue
          in: query
          description: searched value
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Found staff
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: integer
                    example: 1
                  perPage:
                    type: integer
                    example: 2
                  total:
                    type: integer
                    example: 4
                  totalPage:
                    type: integer
                    example: 2
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        firstName:
                          type: string
                        lastName:
                          type: string
                        username:
                          type: string
                        createAt:
                          type: object
                        updatedAt:
                          type: object
                        deleteAt:
                          type: object
                        department:
                          type: object
                      example:
                        - id: 1
                          firstName: Tuan
                          lastName: Minh
                          username: "tuan"
                          createAt: "2021-06-10T15:37:24.122193"
                          updatedAt: null
                          deleteAt: null
                          department:
                            id: 1
                            name: "ITC"
                        - id: 2
                          firstName: Tran
                          lastName: Quang\
                          username: "quang"
                          createAt: "2021-06-10T15:37:24.122193"
                          updatedAt: "2021-06-10T15:37:24.122193"
                          deleteAt: null
                          department:
                            id: 1
                            name: "ITC"
            application/xml:
              schema:
                type: object
                properties:
                  page:
                    type: integer
                    example: 1
                  perPage:
                    type: integer
                    example: 2
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        firstName:
                          type: string
                        lastName:
                          type: string
                      example:
                        - id: 1
                          firstName: Tuan
                          lastName: Minh
                          createAt: "2021-06-10T15:37:24.122193"
                          updatedAt:
                        - id: 2
                          firstName: Tran
                          lastName: Quang
                          createAt: "2021-06-10T15:37:24.122193"
                          updatedAt: "2021-06-10T15:37:24.122193"

        '400':
          description: Invalid input
          content: {}
        '403':
          description: Forbidden Error

  '/staffs/{id}':
    get:
      tags:
        - Staff
      summary: Find staff by id
      security:
        - BasicAuth: []
      parameters:
        - name: id
          in: path
          description: ID of staff
          required: true
          schema:
            minimum: 1
            type: integer
      responses:
        '200':
          description: Found staff
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  firstName:
                    type: string
                    example: Tuan
                  lastName:
                    type: string
                    example: Minh
                  username:
                    type: string
                    example: tuan
                  createAt:
                    type: object
                    example: "2021-06-10T15:37:24.122193"
                  updatedAt:
                    type: object
                    example: "2021-06-10T15:37:24.678193"
                  deleteAt:
                    type: object
                    example: null
                  department:
                    type: object
                    example:
                      id: 1
                      name: "ITC"
            application/xml:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  firstName:
                    type: string
                    example: Tuan
                  lastName:
                    type: string
                    example: Minh
                  createAt:
                    type: object
                    example: "2021-06-10T15:37:24.122193"
                  updatedAt:
                    type: object
                    example: "2021-06-10T15:37:24.678193"
        '400':
          description: Invalid input
        '403':
          description: Forbidden Error
    delete:
      tags:
        - Staff
      summary: Delete staff by id
      security:
        - BasicAuth: []
      parameters:
        - name: id
          in: path
          description: ID od staff
          required: true
          schema:
            minimum: 1
            type: integer
      responses:
        '200':
          description: Delete staff success
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  firstName:
                    type: string
                    example: Tuan
                  lastName:
                    type: string
                    example: Minh
                  username:
                    type: string
                    example: "tuan"
                  createAt:
                    type: object
                    example: "2021-06-10T15:37:24.122193"
                  updatedAt:
                    type: object
                    example: null
                  deleteAt:
                    type: object
                    example: "2021-06-10T15:37:24.122199"
                  department:
                    type: object
                    example:
                      id: 1
                      name: "ITC"
            application/xml:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  firstName:
                    type: string
                    example: Tuan
                  lastName:
                    type: string
                    example: Minh
                  username:
                    type: string
                    example: "tuan"
                  createAt:
                    type: object
                    example: "2021-06-10T15:37:24.122193"
                  updatedAt:
                    type: object
                    example: null
                  deleteAt:
                    type: object
                    example: "2021-06-10T15:37:24.122199"
                  department:
                    type: object
                    example:
                      id: 1
                      name: "ITC"

        '404':
          description: Not found
        '403':
          description: Forbidden Error
    put:
      tags:
        - Staff
      summary: Update staff by id
      security:
        - BasicAuth: []
      parameters:
        - name: id
          in: path
          description: ID of staff
          required: true
          schema:
            minimum: 1
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                  example: "updatedFirstname"
                lastName:
                  type: string
                  example: "updatedLastname"
                username:
                  type: string
                  example: "updatedUsername"
                password:
                  type: string
                  example: "updatedPassword"
                depId:
                  type: integer
                  example: 2
          application/xml:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                  example: "updatedFirstname"
                lastName:
                  type: string
                  example: "updatedLastname"
                username:
                  type: string
                  example: "updatedUsername"
                password:
                  type: string
                  example: "updatedPassword"
                depId:
                  type: integer
                  example: 2
      responses:
        '200':
          description: Update staff success
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  firstName:
                    type: string
                    example: "updatedFirstname"
                  lastName:
                    type: string
                    example: "updatedLastname"
                  username:
                    type: string
                    example: "updatedUsername"
                  createAt:
                    type: object
                    example: "2021-06-10T15:37:24.122193"
                  updatedAt:
                    type: object
                    example: "2021-06-10T15:37:24.678193"
                  deleteAt:
                    type: object
                    example: null
                  department:
                    type: object
                    example:
                      id: 2
                      name: "ACC"
            application/xml:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  firstName:
                    type: string
                    example: "updatedFirstname"
                  lastName:
                    type: string
                    example: "updatedLastname"
                  username:
                    type: string
                    example: "updatedUsername"
                  createAt:
                    type: object
                    example: "2021-06-10T15:37:24.122193"
                  updatedAt:
                    type: object
                    example: "2021-06-10T15:37:24.678193"
                  deleteAt:
                    type: object
                    example: null
                  department:
                    type: object
                    example:
                      id: 2
                      name: "ACC"
        '404':
          description: Not found
        '403':
          description: Forbidden Error
  '/departments/':
    post:
      tags:
        - Department
      summary: Create new Department
      security:
        - BasicAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Tuan
          application/xml:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Tuan
      responses:
        '200':
          description: Create new department successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: Tuan
                  createAt:
                    type: object
                    example: "2021-06-10T15:37:24.122193"
                  updateAt:
                    type: object
                    example: null
                  deleteAt:
                    type: string
                    example: null
            application/xml:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: Tuan
                  createAt:
                    type: object
                    example: "2021-06-10T15:37:24.122193"
                  updateAt:
                    type: object
                    example: null
                  deleteAt:
                    type: object
                    example: null
        '400':
          description: Invalid input
        '403':
          description: Forbidden Error
    get:
      tags:
        - Department
      summary: Find departments like name
      security:
        - BasicAuth: []
      parameters:
        - name: page
          in: query
          description: Number of paging
          required: false
          schema:
            minimum: 0
            type: integer
        - name: perPage
          in: query
          description: Number of object per page
          required: false
          schema:
            minimum: 1
            type: integer
        - name: sortBy
          in: query
          description: Type for sorting
          required: false
          schema:
            type: string
        - name: sortType
          in: query
          description: descending or ascending
          required: false
          schema:
            type: string
        - name: searchedName
          in: query
          description: searched value
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Found department
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: integer
                    example: 0
                  perPage:
                    type: integer
                    example: 2
                  total:
                    type: integer
                    example: 2
                  totalPage:
                    type: integer
                    example: 2
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        createAt:
                          type: object
                        updateAt:
                          type: object
                        deleteAt:
                          type: object
                      example:
                        - id: 1
                          name: "LKJ"
                          createAt: "2021-06-10T15:37:24.122193"
                          updateAt: null
                          deleteAt: null
                        - id: 2
                          name: "HKT"
                          createAt: "2021-06-10T15:37:24.122193"
                          updateAt: null
                          deleteAt: null
            application/xml:
              schema:
                type: object
                properties:
                  page:
                    type: integer
                    example: 0
                  perPage:
                    type: integer
                    example: 2
                  total:
                    type: integer
                    example: 2
                  totalPage:
                    type: integer
                    example: 2
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        createAt:
                          type: object
                        updateAt:
                          type: object
                        deleteAt:
                          type: object
                      example:
                        - id: 1
                          name: "LKJ"
                          createAt: "2021-06-10T15:37:24.122193"
                          updateAt: null
                          deleteAt: null
                        - id: 2
                          name: "HKT"
                          createAt: "2021-06-10T15:37:24.122193"
                          updateAt: null
                          deleteAt: null
        '400':
          description: Invalid input
        '403':
          description: Forbidden Error
  '/departments/{id}':
    put:
      tags:
        - Department
      summary: Update Department
      security:
        - BasicAuth: []
      parameters:
        - name: id
          in: path
          description: ID of department
          required: true
          schema:
            minimum: 1
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: updatedName
          application/xml:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: updatedName
      responses:
        '200':
          description: Update department successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: updatedName
                  createAt:
                    type: object
                    example: "2021-06-10T15:37:24.122193"
                  updateAt:
                    type: object
                    example: "2021-06-10T15:37:24.122193"
                  deleteAt:
                    type: string
                    example: null
            application/xml:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: updatedName
                  createAt:
                    type: object
                    example: "2021-06-10T15:37:24.122193"
                  updateAt:
                    type: object
                    example: "2021-06-10T15:37:24.122193"
                  deleteAt:
                    type: object
                    example: null
        '400':
          description: Invalid input
        '403':
          description: Forbidden Error
    delete:
      tags:
        - Department
      summary: Delete a Department
      security:
        - BasicAuth: []
      parameters:
        - name: id
          in: path
          description: ID of department
          required: true
          schema:
            minimum: 1
            type: integer
      responses:
        '200':
          description: Delete department successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: Tuan
                  createAt:
                    type: object
                    example: "2021-06-10T15:37:24.122193"
                  updateAt:
                    type: object
                    example: "2021-06-10T15:37:24.122197"
                  deleteAt:
                    type: string
                    example: "2021-06-10T15:37:24.122199"
            application/xml:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: Tuan
                  createAt:
                    type: object
                    example: "2021-06-10T15:37:24.122193"
                  updateAt:
                    type: object
                    example: "2021-06-10T15:37:24.122193"
                  deleteAt:
                    type: object
                    example: "2021-06-10T15:37:24.122199"
        '400':
          description: Invalid input
        '403':
          description: Forbidden Error
    get:
      tags:
        - Department
      summary: Find a Department by id
      security:
        - BasicAuth: []
      parameters:
        - name: id
          in: path
          description: ID of department
          required: true
          schema:
            minimum: 1
            type: integer
      responses:
        '200':
          description: Existed department
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: Tuan
                  createAt:
                    type: object
                    example: "2021-06-10T15:37:24.122193"
                  updateAt:
                    type: object
                    example: "2021-06-10T15:37:24.122197"
                  deleteAt:
                    type: string
                    example: null
            application/xml:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: Tuan
                  createAt:
                    type: object
                    example: "2021-06-10T15:37:24.122193"
                  updateAt:
                    type: object
                    example: "2021-06-10T15:37:24.122193"
                  deleteAt:
                    type: object
                    example: null
        '400':
          description: Invalid input
        '403':
          description: Forbidden Error
  '/departments/{id}/staffs':
    get:
      tags:
        - Department
      summary: Find a Staffs by Department id
      security:
        - BasicAuth: []
      parameters:
        - name: id
          in: path
          description: ID of department
          required: true
          schema:
            minimum: 1
            type: integer
        - name: page
          in: query
          description: Number of paging
          required: false
          schema:
            minimum: 0
            type: integer
        - name: perPage
          in: query
          description: Number of object per page
          required: false
          schema:
            minimum: 1
            type: integer
        - name: sortBy
          in: query
          description: Type for sorting
          required: false
          schema:
            type: string
        - name: sortType
          in: query
          description: descending or ascending
          required: false
          schema:
            type: string

      responses:
        '200':
          description: Found staff
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: integer
                    example: 1
                  perPage:
                    type: integer
                    example: 2
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        firstName:
                          type: string
                        lastName:
                          type: string
                        createAt:
                          type: object
                        updatedAt:
                          type: object
                        username:
                          type: string
                      example:
                        - id: 1
                          firstName: Tuan
                          lastName: Minh
                          createAt: "2021-06-10T15:37:24.122193"
                          updatedAt: null
                          deleteAt: null
                          username: "test1"
                        - id: 2
                          firstName: Tran
                          lastName: Quang
                          createAt: "2021-06-10T15:37:24.122193"
                          updateAt: "2021-06-10T15:37:24.122193"
                          deleteAt: null
                          username: "test2"
            application/xml:
              schema:
                type: object
                properties:
                  page:
                    type: integer
                    example: 1
                  perPage:
                    type: integer
                    example: 2
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        firstName:
                          type: string
                        lastName:
                          type: string
                        createAt:
                          type: object
                        updatedAt:
                          type: object
                        username:
                          type: string
                      example:
                        - id: 1
                          firstName: Tuan
                          lastName: Minh
                          createAt: "2021-06-10T15:37:24.122193"
                          updatedAt: "2021-06-10T15:37:24.122193"
                          deleteAt: null
                          username: "test1"
                        - id: 2
                          firstName: Tran
                          lastName: Quang
                          createAt: "2021-06-10T15:37:24.122193"
                          updatedAt: "2021-06-10T15:37:24.122193"
                          deleteAt: null
                          username: "test2"

        '400':
          description: Invalid input
        '403':
          description: Forbidden Error
components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
